module firstw(
		input [2:0] A, 
		input EN, 
		input D, 
		output reg[7:0] Q);

always @(EN)befin
if (!EN)begin
Q[0:0] = ~A[2:0]&~A[1:0]&~A[0:0]&D&~EN;
Q[1:0] = ~A[2:0]&~A[1:0]&A[0:0]&D&~EN;
Q[2:0] = ~A[2:0]&A[1:0]&~A[0:0]&D&~EN;
Q[3:0] = ~A[2:0]&A[1:0]&A[0:0]&D&~EN;
Q[4:0] = A[2:0]&~A[1:0]&~A[0:0]&D&~EN;
Q[5:0] = A[2:0]&~A[1:0]&A[0:0]&D&~EN;
Q[6:0] = A[2:0]&A[1:0]&~A[0:0]&D&~EN;
Q[7:0] = A[2:0]&A[1:0]&A[0:0]&D&~EN;
end
else begin
assign Q = 1'bz;
end
end


endmodule
